
# Application name - the name appended at starting of file name to differentiate
# between different property files for different microservices
spring.application.name=id-authentication
 
#Active Profile - will relate to development properties file in the server.
#If this property is absent then default profile will be activated which is
#the property file without any environment name at the end. 
spring.profiles.active=dev


# defining current branch in which we are working as label
spring.cloud.config.label=master
 

# url where spring cloud config server is running 
spring.cloud.config.uri=localhost

 
#management.security.enabled=false

#exposing refresh endpoint so that whenevr configuration changes in git,
#post /actuator/refresh endpoint can be called for the client microservices
#to update the configuration
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=info,health,refresh,restart


#disabling health check so that client doesnt try to load properties from sprint config server every
# 5 minutes (should not be done in production)
health.config.enabled=false

ida.api.version=v1
server.port=8092
server.servlet.context-path=/idauthentication/${ida.api.version}/otp

mosip.kernel.keymanager.certificate-file-path=classpath:cert/mosipio.crt
mosip.kernel.keymanager.privatekey-file-path=classpath:cert/mosipio.key
mosip.kernel.keymanager.certificate-type=X509